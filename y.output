Terminais sem uso na gramática

   INT
   FLOAT
   PRINT
   SCAN
   EXPR
   ATTR
   UMINUS


Gramática

    0 $accept: program $end

    1 program: program bloco
    2        | %empty

    3 $@1: %empty

    4 bloco: '{' $@1 decls stmts '}'

    5 decls: decls decl
    6      | %empty

    7 decl: VAR ID TYPE ';'

    8 stmts: stmts stmt
    9      | %empty

   10 stmt: cond
   11     | loop
   12     | expr ';'
   13     | bloco
   14     | attr

   15 cond: IF logic bloco
   16     | IF logic bloco ELSE bloco

   17 loop: FOR logic bloco

   18 logic: expr LT expr
   19      | expr LE expr
   20      | expr EQ expr
   21      | expr NE expr
   22      | expr GT expr
   23      | expr GE expr

   24 attr: ID '=' expr ';'

   25 expr: expr '+' expr
   26     | expr '-' expr
   27     | expr '*' expr
   28     | expr '/' expr
   29     | '(' expr ')'
   30     | NUMBER
   31     | ID


Terminais, com as regras onde eles aparecem

$end (0) 0
'(' (40) 29
')' (41) 29
'*' (42) 27
'+' (43) 25
'-' (45) 26
'/' (47) 28
';' (59) 7 12 24
'=' (61) 24
'{' (123) 4
'}' (125) 4
error (256)
INT (258)
FLOAT (259)
ID (260) 7 24 31
TYPE (261) 7
FOR (262) 17
IF (263) 15 16
ELSE (264) 16
LT (265) 18
LE (266) 19
EQ (267) 20
NE (268) 21
GT (269) 22
GE (270) 23
PRINT (271)
SCAN (272)
EXPR (273)
ATTR (274)
VAR (275) 7
NUMBER (276) 30
UMINUS (277)


Não terminais com as regras onde eles aparecem

$accept (33)
    à esquerda: 0
program (34)
    à esquerda: 1 2, à direita: 0 1
bloco (35)
    à esquerda: 4, à direita: 1 13 15 16 17
$@1 (36)
    à esquerda: 3, à direita: 4
decls (37)
    à esquerda: 5 6, à direita: 4 5
decl (38)
    à esquerda: 7, à direita: 5
stmts (39)
    à esquerda: 8 9, à direita: 4 8
stmt (40)
    à esquerda: 10 11 12 13 14, à direita: 8
cond (41)
    à esquerda: 15 16, à direita: 10
loop (42)
    à esquerda: 17, à direita: 11
logic (43)
    à esquerda: 18 19 20 21 22 23, à direita: 15 16 17
attr (44)
    à esquerda: 24, à direita: 14
expr (45)
    à esquerda: 25 26 27 28 29 30 31, à direita: 12 18 19 20 21 22
    23 24 25 26 27 28 29


Estado 0

    0 $accept: . program $end

    $padrão  reduzir usando a regra 2 (program)

    program  ir ao estado 1


Estado 1

    0 $accept: program . $end
    1 program: program . bloco

    $end  deslocar, e ir ao estado 2
    '{'   deslocar, e ir ao estado 3

    bloco  ir ao estado 4


Estado 2

    0 $accept: program $end .

    $padrão  aceitar


Estado 3

    4 bloco: '{' . $@1 decls stmts '}'

    $padrão  reduzir usando a regra 3 ($@1)

    $@1  ir ao estado 5


Estado 4

    1 program: program bloco .

    $padrão  reduzir usando a regra 1 (program)


Estado 5

    4 bloco: '{' $@1 . decls stmts '}'

    $padrão  reduzir usando a regra 6 (decls)

    decls  ir ao estado 6


Estado 6

    4 bloco: '{' $@1 decls . stmts '}'
    5 decls: decls . decl

    VAR  deslocar, e ir ao estado 7

    $padrão  reduzir usando a regra 9 (stmts)

    decl   ir ao estado 8
    stmts  ir ao estado 9


Estado 7

    7 decl: VAR . ID TYPE ';'

    ID  deslocar, e ir ao estado 10


Estado 8

    5 decls: decls decl .

    $padrão  reduzir usando a regra 5 (decls)


Estado 9

    4 bloco: '{' $@1 decls stmts . '}'
    8 stmts: stmts . stmt

    ID      deslocar, e ir ao estado 11
    FOR     deslocar, e ir ao estado 12
    IF      deslocar, e ir ao estado 13
    NUMBER  deslocar, e ir ao estado 14
    '{'     deslocar, e ir ao estado 3
    '}'     deslocar, e ir ao estado 15
    '('     deslocar, e ir ao estado 16

    bloco  ir ao estado 17
    stmt   ir ao estado 18
    cond   ir ao estado 19
    loop   ir ao estado 20
    attr   ir ao estado 21
    expr   ir ao estado 22


Estado 10

    7 decl: VAR ID . TYPE ';'

    TYPE  deslocar, e ir ao estado 23


Estado 11

   24 attr: ID . '=' expr ';'
   31 expr: ID .

    '='  deslocar, e ir ao estado 24

    $padrão  reduzir usando a regra 31 (expr)


Estado 12

   17 loop: FOR . logic bloco

    ID      deslocar, e ir ao estado 25
    NUMBER  deslocar, e ir ao estado 14
    '('     deslocar, e ir ao estado 16

    logic  ir ao estado 26
    expr   ir ao estado 27


Estado 13

   15 cond: IF . logic bloco
   16     | IF . logic bloco ELSE bloco

    ID      deslocar, e ir ao estado 25
    NUMBER  deslocar, e ir ao estado 14
    '('     deslocar, e ir ao estado 16

    logic  ir ao estado 28
    expr   ir ao estado 27


Estado 14

   30 expr: NUMBER .

    $padrão  reduzir usando a regra 30 (expr)


Estado 15

    4 bloco: '{' $@1 decls stmts '}' .

    $padrão  reduzir usando a regra 4 (bloco)


Estado 16

   29 expr: '(' . expr ')'

    ID      deslocar, e ir ao estado 25
    NUMBER  deslocar, e ir ao estado 14
    '('     deslocar, e ir ao estado 16

    expr  ir ao estado 29


Estado 17

   13 stmt: bloco .

    $padrão  reduzir usando a regra 13 (stmt)


Estado 18

    8 stmts: stmts stmt .

    $padrão  reduzir usando a regra 8 (stmts)


Estado 19

   10 stmt: cond .

    $padrão  reduzir usando a regra 10 (stmt)


Estado 20

   11 stmt: loop .

    $padrão  reduzir usando a regra 11 (stmt)


Estado 21

   14 stmt: attr .

    $padrão  reduzir usando a regra 14 (stmt)


Estado 22

   12 stmt: expr . ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr

    '+'  deslocar, e ir ao estado 30
    '-'  deslocar, e ir ao estado 31
    '*'  deslocar, e ir ao estado 32
    '/'  deslocar, e ir ao estado 33
    ';'  deslocar, e ir ao estado 34


Estado 23

    7 decl: VAR ID TYPE . ';'

    ';'  deslocar, e ir ao estado 35


Estado 24

   24 attr: ID '=' . expr ';'

    ID      deslocar, e ir ao estado 25
    NUMBER  deslocar, e ir ao estado 14
    '('     deslocar, e ir ao estado 16

    expr  ir ao estado 36


Estado 25

   31 expr: ID .

    $padrão  reduzir usando a regra 31 (expr)


Estado 26

   17 loop: FOR logic . bloco

    '{'  deslocar, e ir ao estado 3

    bloco  ir ao estado 37


Estado 27

   18 logic: expr . LT expr
   19      | expr . LE expr
   20      | expr . EQ expr
   21      | expr . NE expr
   22      | expr . GT expr
   23      | expr . GE expr
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr

    LT   deslocar, e ir ao estado 38
    LE   deslocar, e ir ao estado 39
    EQ   deslocar, e ir ao estado 40
    NE   deslocar, e ir ao estado 41
    GT   deslocar, e ir ao estado 42
    GE   deslocar, e ir ao estado 43
    '+'  deslocar, e ir ao estado 30
    '-'  deslocar, e ir ao estado 31
    '*'  deslocar, e ir ao estado 32
    '/'  deslocar, e ir ao estado 33


Estado 28

   15 cond: IF logic . bloco
   16     | IF logic . bloco ELSE bloco

    '{'  deslocar, e ir ao estado 3

    bloco  ir ao estado 44


Estado 29

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | '(' expr . ')'

    '+'  deslocar, e ir ao estado 30
    '-'  deslocar, e ir ao estado 31
    '*'  deslocar, e ir ao estado 32
    '/'  deslocar, e ir ao estado 33
    ')'  deslocar, e ir ao estado 45


Estado 30

   25 expr: expr '+' . expr

    ID      deslocar, e ir ao estado 25
    NUMBER  deslocar, e ir ao estado 14
    '('     deslocar, e ir ao estado 16

    expr  ir ao estado 46


Estado 31

   26 expr: expr '-' . expr

    ID      deslocar, e ir ao estado 25
    NUMBER  deslocar, e ir ao estado 14
    '('     deslocar, e ir ao estado 16

    expr  ir ao estado 47


Estado 32

   27 expr: expr '*' . expr

    ID      deslocar, e ir ao estado 25
    NUMBER  deslocar, e ir ao estado 14
    '('     deslocar, e ir ao estado 16

    expr  ir ao estado 48


Estado 33

   28 expr: expr '/' . expr

    ID      deslocar, e ir ao estado 25
    NUMBER  deslocar, e ir ao estado 14
    '('     deslocar, e ir ao estado 16

    expr  ir ao estado 49


Estado 34

   12 stmt: expr ';' .

    $padrão  reduzir usando a regra 12 (stmt)


Estado 35

    7 decl: VAR ID TYPE ';' .

    $padrão  reduzir usando a regra 7 (decl)


Estado 36

   24 attr: ID '=' expr . ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr

    '+'  deslocar, e ir ao estado 30
    '-'  deslocar, e ir ao estado 31
    '*'  deslocar, e ir ao estado 32
    '/'  deslocar, e ir ao estado 33
    ';'  deslocar, e ir ao estado 50


Estado 37

   17 loop: FOR logic bloco .

    $padrão  reduzir usando a regra 17 (loop)


Estado 38

   18 logic: expr LT . expr

    ID      deslocar, e ir ao estado 25
    NUMBER  deslocar, e ir ao estado 14
    '('     deslocar, e ir ao estado 16

    expr  ir ao estado 51


Estado 39

   19 logic: expr LE . expr

    ID      deslocar, e ir ao estado 25
    NUMBER  deslocar, e ir ao estado 14
    '('     deslocar, e ir ao estado 16

    expr  ir ao estado 52


Estado 40

   20 logic: expr EQ . expr

    ID      deslocar, e ir ao estado 25
    NUMBER  deslocar, e ir ao estado 14
    '('     deslocar, e ir ao estado 16

    expr  ir ao estado 53


Estado 41

   21 logic: expr NE . expr

    ID      deslocar, e ir ao estado 25
    NUMBER  deslocar, e ir ao estado 14
    '('     deslocar, e ir ao estado 16

    expr  ir ao estado 54


Estado 42

   22 logic: expr GT . expr

    ID      deslocar, e ir ao estado 25
    NUMBER  deslocar, e ir ao estado 14
    '('     deslocar, e ir ao estado 16

    expr  ir ao estado 55


Estado 43

   23 logic: expr GE . expr

    ID      deslocar, e ir ao estado 25
    NUMBER  deslocar, e ir ao estado 14
    '('     deslocar, e ir ao estado 16

    expr  ir ao estado 56


Estado 44

   15 cond: IF logic bloco .
   16     | IF logic bloco . ELSE bloco

    ELSE  deslocar, e ir ao estado 57

    $padrão  reduzir usando a regra 15 (cond)


Estado 45

   29 expr: '(' expr ')' .

    $padrão  reduzir usando a regra 29 (expr)


Estado 46

   25 expr: expr . '+' expr
   25     | expr '+' expr .
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr

    '*'  deslocar, e ir ao estado 32
    '/'  deslocar, e ir ao estado 33

    $padrão  reduzir usando a regra 25 (expr)


Estado 47

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   26     | expr '-' expr .
   27     | expr . '*' expr
   28     | expr . '/' expr

    '*'  deslocar, e ir ao estado 32
    '/'  deslocar, e ir ao estado 33

    $padrão  reduzir usando a regra 26 (expr)


Estado 48

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   27     | expr '*' expr .
   28     | expr . '/' expr

    $padrão  reduzir usando a regra 27 (expr)


Estado 49

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   28     | expr '/' expr .

    $padrão  reduzir usando a regra 28 (expr)


Estado 50

   24 attr: ID '=' expr ';' .

    $padrão  reduzir usando a regra 24 (attr)


Estado 51

   18 logic: expr LT expr .
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr

    '+'  deslocar, e ir ao estado 30
    '-'  deslocar, e ir ao estado 31
    '*'  deslocar, e ir ao estado 32
    '/'  deslocar, e ir ao estado 33

    $padrão  reduzir usando a regra 18 (logic)


Estado 52

   19 logic: expr LE expr .
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr

    '+'  deslocar, e ir ao estado 30
    '-'  deslocar, e ir ao estado 31
    '*'  deslocar, e ir ao estado 32
    '/'  deslocar, e ir ao estado 33

    $padrão  reduzir usando a regra 19 (logic)


Estado 53

   20 logic: expr EQ expr .
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr

    '+'  deslocar, e ir ao estado 30
    '-'  deslocar, e ir ao estado 31
    '*'  deslocar, e ir ao estado 32
    '/'  deslocar, e ir ao estado 33

    $padrão  reduzir usando a regra 20 (logic)


Estado 54

   21 logic: expr NE expr .
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr

    '+'  deslocar, e ir ao estado 30
    '-'  deslocar, e ir ao estado 31
    '*'  deslocar, e ir ao estado 32
    '/'  deslocar, e ir ao estado 33

    $padrão  reduzir usando a regra 21 (logic)


Estado 55

   22 logic: expr GT expr .
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr

    '+'  deslocar, e ir ao estado 30
    '-'  deslocar, e ir ao estado 31
    '*'  deslocar, e ir ao estado 32
    '/'  deslocar, e ir ao estado 33

    $padrão  reduzir usando a regra 22 (logic)


Estado 56

   23 logic: expr GE expr .
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr

    '+'  deslocar, e ir ao estado 30
    '-'  deslocar, e ir ao estado 31
    '*'  deslocar, e ir ao estado 32
    '/'  deslocar, e ir ao estado 33

    $padrão  reduzir usando a regra 23 (logic)


Estado 57

   16 cond: IF logic bloco ELSE . bloco

    '{'  deslocar, e ir ao estado 3

    bloco  ir ao estado 58


Estado 58

   16 cond: IF logic bloco ELSE bloco .

    $padrão  reduzir usando a regra 16 (cond)
