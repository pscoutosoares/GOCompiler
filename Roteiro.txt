1. O trabalho será individual;

2. Livre escolha da linguagem de programação, desde que não tenha mais de dois alunos 
trabalhando com a mesma linguagem; Por simplicidade, recomendo a escolha de alguma 
linguagem no paradigma estruturado.

3. A partir da linguagem escolhida, vocês devem especificar um subconjunto desta linguagem,
mantendo os requisitos mínimos:

a) Pelo menos dois tipos de dados (inteiro e ponto flutuante). Tipo string é opcional e vale ponto extra;
b) expressões aritméticas ( -, +, *, /, MOD), lógicas ( AND, OR e NOT) e relacionais ( Maior que, menor que, maior ou igual, menor ou igual, igual e diferente)
c) precedência de operadores (verificar regras da linguagem) / utilização de parênteses para "alterar" a precedência;
d) 1 comando condicional (if-else, switch ou equivalente);
e) 1 comando de repetição (for, while, do ... while, repeat ou equivalente);
f) aninhamento entre os blocos;
g) contexto das variáveis (global, local e bloco);
h) algum comando para exibir o valor das variáveis (print ou equivalente)
i) algum comando para receber o valor das variáveis (scan ou equivalente)
j) verificações de tipo de declaração de variável e tipos de expressão

4. A saída do compilador deve ser um programa na linguagem mips, que será executado no simulador spim;

5. Não é necessário implementar as etapas de otimização;

6. NÃO DEIXEM DE INICIAR O PROJETO IMEDIATAMENTE!!!!

--------------------------------------

ROTEIRO DE DESENVOLVIMENTO

a) Especificar o subconjunto da linguagem - muito importante
b) Estudar a linguagem e fazer alguns pequenos programas para teste
        i. somar dois números e exibir o resultado,
        ii. imprimir de 1 a 10 com repetição,
       iii. receber o número e verificar se é par ou ímpar
       iv. calcular o fatorial de um dado número
c) Implementar os mesmos programas em mips
d) Escrever o analisador léxico
e) Escrever o analisador sintático - se preocupar inicialmente apenas com a gramática
f) Construir a árvore sintática - Fazer de forma incremental, primeiro as expressões, depois os blocos, condicionais e repetições, deixar as funções por último
g) Análise semântica
h) gerador de código de 3 endereços - LEMBREM-SE QUE O CÓDIGO FONTE PASSADO COMO EXEMPLO NÃO ESTÁ ARMAZENANDO O CÓDIGO DE 3 ENDEREÇOS EM UMA ESTRUTURA DE DADOS, EM VEZ DISSO, O EXEMPLO ESTÁ APENAS IMPRIMINDO EM TELA - VOCÊS DEVEM IMPLEMENTAR UMA LISTA ENCADEADA
i) gerador de código mips
j) testar o código gerado, com os programas de exemplo criados em b) e simular o resultado no spim

l) FÉRIAS !!!

//yacc calc.yacc -d
//lex calc.lex
//gcc *.c -o calc

